// File: memory.v
// Generated by MyHDL 0.11
// Date: Sun Oct  3 23:34:56 2021


`timescale 1ns/10ps

module memory (
    addres,
    data_in,
    enable,
    clk,
    data_out,
    reset
);


input [4:0] addres;
input [31:0] data_in;
input enable;
input clk;
output [31:0] data_out;
reg [31:0] data_out;
input reset;

reg [31:0] memory32 [0:32-1];



always @(posedge clk, posedge reset) begin: MEMORY_WRITE
    if (reset == 1) begin
        memory32[0] <= 0;
        memory32[1] <= 0;
        memory32[2] <= 0;
        memory32[3] <= 0;
        memory32[4] <= 0;
        memory32[5] <= 0;
        memory32[6] <= 0;
        memory32[7] <= 0;
        memory32[8] <= 0;
        memory32[9] <= 0;
        memory32[10] <= 0;
        memory32[11] <= 0;
        memory32[12] <= 0;
        memory32[13] <= 0;
        memory32[14] <= 0;
        memory32[15] <= 0;
        memory32[16] <= 0;
        memory32[17] <= 0;
        memory32[18] <= 0;
        memory32[19] <= 0;
        memory32[20] <= 0;
        memory32[21] <= 0;
        memory32[22] <= 0;
        memory32[23] <= 0;
        memory32[24] <= 0;
        memory32[25] <= 0;
        memory32[26] <= 0;
        memory32[27] <= 0;
        memory32[28] <= 0;
        memory32[29] <= 0;
        memory32[30] <= 0;
        memory32[31] <= 0;
        data_out <= 0;
    end
    else begin
        if ((enable == 1)) begin
            memory32[addres] <= data_in;
        end
        data_out <= memory32[addres];
    end
end

endmodule
